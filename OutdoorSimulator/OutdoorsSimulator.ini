;===== Rainmeter ===============;
[Rainmeter]
AppVersion=2003000
Update=1000
Debug=1

;===== Metadata ================;
[Metadata]
Name=OutdoorSimulator
Author=thatsIch
Description=Switches backgrounds depending on the state of sun
Version=1.0
License=Creative Commons BY-NC-SA 3.0

;===== Variables ===============;
[Variables]
; configurations
Latitude=51.2964148
Longitude=6.8401844
GMT=1.0
DST=1

; helper variables
WebParserSunRiseSet={"results":{"sunrise":"(.*)","sunset":"(.*)","solar_noon":"(.*)","day_length":.*,"civil_twilight_begin":"(.*)","civil_twilight_end":"(.*)","nautical_twilight_begin":"(.*)","nautical_twilight_end":"(.*)","astronomical_twilight_begin":"(.*)","astronomical_twilight_end":"(.*)"},"status":"OK"}
TimeStampFormat=%Y-%m-%dT%T+00:00
ApiURL=http://api.sunrise-sunset.org/json?lat=#Latitude#&lng=#Longitude#&formatted=0


; used to fetch the JSON from web
[SunriseSunsetParser]
Measure=Plugin
Plugin=WebParser
UpdateRate=1800
Url=#ApiURL#
;Url=file://D:\Documents\Rainmeter\Skins\Minimal\OutdoorSimulator\example.json
RegExp="(?siU)#WebParserSunRiseSet#"
FinishAction=[!EnableMeasureGroup Times][!UpdateMeasureGroup Times]

; sunrise
; adresses the index of the parser
[Sunrise]
Measure=Plugin
Group=Times
Disabled=1
Plugin=WebParser
Url=[SunriseSunsetParser]
StringIndex=1

; identifies the parsed string as a full 12-hour clock time. (e.g. "10:55:03 pm")
[SunriseTime]
Measure=Time
Group=Times
TimeStamp=[Sunrise]
TimeStampFormat=#TimeStampFormat#
DynamicVariables=1
Disabled=1


; sunset
; adresses the index of the parser
[Sunset]
Measure=Plugin
Group=Times
Disabled=1
Plugin=WebParser
Url=[SunriseSunsetParser]
StringIndex=2

; identifies the parsed string as a full 12-hour clock time. (e.g. "10:55:03 pm")
[SunsetTime]
Measure=Time
Group=Times
TimeStamp=[Sunset]
TimeStampFormat=#TimeStampFormat#
DynamicVariables=1
Disabled=1


; solar noon
; adresses the index of the parser
[SolarNoon]
Measure=Plugin
Group=Times
Disabled=1
Plugin=WebParser
Url=[SunriseSunsetParser]
StringIndex=3

; identifies the parsed string as a full 12-hour clock time. (e.g. "10:55:03 pm")
[SolarNoonTime]
Measure=Time
Group=Times
TimeStamp=[SolarNoon]
TimeStampFormat=#TimeStampFormat#
DynamicVariables=1
Disabled=1


[SolarStart]
Measure=Calc
Group=Times
Formula=([SunriseTime:TimeStamp] + [SolarNoonTime:TimeStamp]) / 2 
DynamicVariables=1
Disabled=1

[SolarStartTime]
Measure=Time
Group=Times
TimeStamp=[SolarStart]
DynamicVariables=1
Disabled=1

[SolarEnd]
Measure=Calc
Group=Times
Formula=([SunsetTime:TimeStamp] + [SolarNoonTime:TimeStamp]) / 2 
DynamicVariables=1
Disabled=1

[SolarEndTime]
Measure=Time
Group=Times
TimeStamp=[SolarEnd]
DynamicVariables=1
Disabled=1

; civil twilight begin
; adresses the index of the parser
[CivilTwilightBegin]
Measure=Plugin
Group=Times
Disabled=1
Plugin=WebParser
Url=[SunriseSunsetParser]
StringIndex=4

; identifies the parsed string as a full 12-hour clock time. (e.g. "10:55:03 pm")
[CivilTwilightBeginTime]
Measure=Time
Group=Times
TimeStamp=[CivilTwilightBegin]
TimeStampFormat=#TimeStampFormat#
DynamicVariables=1
Disabled=1


; civil twilight end
; adresses the index of the parser
[CivilTwilightEnd]
Measure=Plugin
Group=Times
Disabled=1
Plugin=WebParser
Url=[SunriseSunsetParser]
StringIndex=5

; identifies the parsed string as a full 12-hour clock time. (e.g. "10:55:03 pm")
[CivilTwilightEndTime]
Measure=Time
Group=Times
TimeStamp=[CivilTwilightEnd]
TimeStampFormat=#TimeStampFormat#
DynamicVariables=1
Disabled=1


; nautical twilight begin
; adresses the index of the parser
[NauticalTwilightBegin]
Measure=Plugin
Group=Times
Disabled=1
Plugin=WebParser
Url=[SunriseSunsetParser]
StringIndex=6

; identifies the parsed string as a full 12-hour clock time. (e.g. "10:55:03 pm")
[NauticalTwilightBeginTime]
Measure=Time
Group=Times
TimeStamp=[NauticalTwilightBegin]
TimeStampFormat=#TimeStampFormat#
DynamicVariables=1
Disabled=1


; nautical twilight end
; adresses the index of the parser
[NauticalTwilightEnd]
Measure=Plugin
Group=Times
Disabled=1
Plugin=WebParser
Url=[SunriseSunsetParser]
StringIndex=7

; identifies the parsed string as a full 12-hour clock time. (e.g. "10:55:03 pm")
[NauticalTwilightEndTime]
Measure=Time
Group=Times
TimeStamp=[NauticalTwilightEnd]
TimeStampFormat=#TimeStampFormat#
DynamicVariables=1
Disabled=1

[NauticalTwilightEndLocalTime]
Measure=Time
Group=Times
TimeStamp=[NauticalTwilightEnd]
TimeStampFormat=#TimeStampFormat#
DynamicVariables=1
Disabled=1


; used as reference to determine the wallpapars
; we shift the time backwards because the parser is returnung GMT+0
[Now]
Measure=Time
Group=Times
Disabled=1
TimeZone=-1.0*#GMT#
DaylightSavingTime=#DST#

; Dummy else skin is disabled
[Dummy]
Meter=String
;MeasureName=Now
;Text=test: %1

; Debug Information
;[Test]
;Measure=Calc
;Formula=CivilTwilightEndTime - Now

;[Test8]
;Measure=Calc
;Formula=(NauticalTwilightBeginTime <= Now) && (Now < CivilTwilightBeginTime)
;[Test0]
;Measure=Calc
;Formula=(CivilTwilightBeginTime <= Now) && (Now < SunriseTime)
;[Test1]
;Measure=Calc
;Formula=(SunriseTime <= Now) && (Now < SolarStartTime)
;[Test2]
;Measure=Calc
;Formula=(SolarStartTime <= Now) && (Now < SolarNoonTime)
;[Test3]
;Measure=Calc
;Formula=(SolarNoonTime <= Now) && (Now < SolarEndTime)
;[Test4]
;Measure=Calc
;Formula=(SolarEndTime <= Now) && (Now < SunsetTime)
;[Test5]
;Measure=Calc
;Formula=(SunsetTime <= Now) && (Now < CivilTwilightEndTime)
;[Test6]
;Measure=Calc
;Formula=(CivilTwilightEndTime <= Now) && (Now < NauticalTwilightEndTime)
;[Test7]
;Measure=Calc
;Formula=(NauticalTwilightEndTime <= Now) || (Now < NauticalTwilightBeginTime)
;[Test71]
;Measure=Calc
;Formula=(NauticalTwilightEndTime <= Now)
;[Test72]
;Measure=Calc
;Formula=(Now < NauticalTwilightBeginTime)



; Sets the wallpaper depending on the sun state
[WallpaperSetter]
Measure=Calc
Group=Times
Disabled=1
DynamicVariables=1
IfCondition=(NauticalTwilightBeginTime <= Now) && (Now < CivilTwilightBeginTime)
IfTrueAction=[!SetWallpaper "8steps_1080\8.png" Fill]

IfCondition2=(CivilTwilightBeginTime <= Now) && (Now < SunriseTime)
IfTrueAction2=[!SetWallpaper "8steps_1080\0.jpg" Fill]

IfCondition3=(SunriseTime <= Now) && (Now < SolarStartTime)
IfTrueAction3=[!SetWallpaper "8steps_1080\1.png" Fill]

IfCondition4=(SolarStartTime <= Now) && (Now < SolarNoonTime)
IfTrueAction4=[!SetWallpaper "8steps_1080\2.png" Fill]

IfCondition5=(SolarNoonTime <= Now) && (Now < SolarEndTime)
IfTrueAction5=[!SetWallpaper "8steps_1080\3.png" Fill]

IfCondition6=(SolarEndTime <= Now) && (Now < SunsetTime)
IfTrueAction6=[!SetWallpaper "8steps_1080\4.png" Fill]

IfCondition7=(SunsetTime <= Now) && (Now < CivilTwilightEndTime)
IfTrueAction7=[!SetWallpaper "8steps_1080\5.png" Fill]

IfCondition8=(CivilTwilightEndTime <= Now) && (Now < NauticalTwilightEndTime)
IfTrueAction8=[!SetWallpaper "8steps_1080\6.jpg" Fill]

IfCondition9=(NauticalTwilightEndTime <= Now) || (Now < NauticalTwilightBeginTime)
IfTrueAction9=[!SetWallpaper "8steps_1080\7.jpg" Fill]
